apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "graphprotocol-node.fullname" . }}
  labels:
    {{- include "graphprotocol-node.labels" . | nindent 4 }}
spec:
  {{/* There shouldn't be more than 1 index (ingest) graph-protocol node in installation */}}
  {{- if eq .Values.role "index-node" -}}
  replicas: 1
  strategy:
    type: Recreate
  {{- else -}}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  {{- end }}
  selector:
    matchLabels:
      {{- include "graphprotocol-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret.yaml: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{-   toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "graphprotocol-node.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
              {{- if eq .Values.role "index-node" -}}
              {{/* Index (ingest) node_id should equal BLOCK_INGESTOR env value to work in this mode */}}
            - name: BLOCK_INGESTOR
              value: {{ .Values.blockIngestorNodeId | quote }}
            - name: node_id
              value: {{ .Values.blockIngestorNodeId | quote}}
              {{- else -}}
            - name: node_id
               valueFrom:
                fieldRef:
                  fieldPath: metadata.name
              {{- end }}
            - name: node_role
              value: {{ .Values.role | quote }}
            - name: GRAPH_KILL_IF_UNRESPONSIVE
              value: "false"
            - name: postgres_db
              value: {{ required "Postgres name wasn't specified" .Values.postgres.db | quote }}
            - name: postgres_host
              value: {{ required "Postgres host wasn't specified" .Values.postgres.host | quote }}
            - name: ipfs
              value: {{ required "IPFS address wasn't specified" .Values.config.ipfs | quote }}
          envFrom:
            - secretRef:
                name: {{ include "graphprotocol-node.fullname" . }}
          ports:
            - name: metrics 
              containerPort: 8040
              protocol: TCP
            - name: json-rpc 
              containerPort: 8020
              protocol: TCP
            - name: graphql
              containerPort: 8000
              protocol: TCP
            - name: graphql-ws
              containerPort: 8001
              protocol: TCP
            {{- if eq .Values.role "index-node" }}
            - name: index
              containerPort: 8030
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: metrics
          readinessProbe:
            httpGet:
              path: /
              port: metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
